openapi: 3.0.3
info:
  title: 都更計票系統 - 身份驗證 API
  version: 1.0.0
  description: |
    使用者登入、登出和權限管理的 API 規範
    
    **功能需求對應**:
    - FR-001: 使用者登入功能
    - FR-002: JWT Token 管理
    - FR-003: Token 過期處理
    - FR-004: 登入失敗次數記錄
    - FR-005: 登出功能
    - FR-006: 角色權限控制

servers:
  - url: http://localhost:4002/api
    description: 開發環境
  - url: https://api.urban-renewal.example.com/api
    description: 生產環境

paths:
  /auth/login:
    post:
      summary: 使用者登入
      description: |
        使用帳號和密碼進行身份驗證，成功後返回 JWT Token
        
        **驗證規則**:
        - 帳號：4-50 字元，英文、數字、底線
        - 密碼：最少 8 字元
        
        **錯誤處理**:
        - 連續 5 次失敗將鎖定帳號
        - 鎖定後需管理員重置
      operationId: login
      tags:
        - 身份驗證
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 使用者帳號
                  example: admin
                  minLength: 4
                  maxLength: 50
                password:
                  type: string
                  format: password
                  description: 使用者密碼
                  example: Password123!
                  minLength: 8
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 登入成功
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: JWT 存取權杖
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refresh_token:
                        type: string
                        description: 更新權杖
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      expires_in:
                        type: integer
                        description: Token 有效期（秒）
                        example: 3600
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: 帳號或密碼錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: 帳號或密碼錯誤
                errors: []
        '429':
          description: 登入嘗試次數過多，帳號已鎖定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: 帳號已鎖定，請聯絡管理員
                errors:
                  - 連續登入失敗 5 次，帳號已被鎖定

  /auth/logout:
    post:
      summary: 使用者登出
      description: 清除使用者的登入狀態和 Token
      operationId: logout
      tags:
        - 身份驗證
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 登出成功
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      summary: 更新 Token
      description: 使用 Refresh Token 取得新的 Access Token
      operationId: refreshToken
      tags:
        - 身份驗證
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: Refresh Token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token 更新成功
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: 新的 Access Token
                      expires_in:
                        type: integer
                        description: Token 有效期（秒）
                        example: 3600
        '401':
          description: Refresh Token 無效或已過期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      summary: 取得當前使用者資訊
      description: 根據 JWT Token 取得當前登入使用者的詳細資訊
      operationId: getCurrentUser
      tags:
        - 身份驗證
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功取得使用者資訊
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/forgot-password:
    post:
      summary: 忘記密碼
      description: 發送密碼重置連結到使用者電子郵件（保留功能，第一版可能未實作）
      operationId: forgotPassword
      tags:
        - 身份驗證
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: 使用者電子郵件
                  example: admin@example.com
      responses:
        '200':
          description: 密碼重置郵件已發送
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 密碼重置連結已發送至您的電子郵件
        '404':
          description: 找不到使用者
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/reset-password:
    post:
      summary: 重設密碼
      description: 使用重置 Token 重設密碼
      operationId: resetPassword
      tags:
        - 身份驗證
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - new_password
              properties:
                token:
                  type: string
                  description: 密碼重置 Token
                new_password:
                  type: string
                  format: password
                  description: 新密碼
                  minLength: 8
                  example: NewPassword123!
      responses:
        '200':
          description: 密碼重設成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 密碼重設成功，請使用新密碼登入
        '400':
          description: Token 無效或已過期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: 使用者 ID
        username:
          type: string
          example: admin
          description: 登入帳號
        name:
          type: string
          example: 系統管理員
          description: 使用者姓名
        email:
          type: string
          format: email
          example: admin@example.com
          description: 電子郵件
        phone:
          type: string
          example: "0912345678"
          description: 聯絡電話
        role:
          type: string
          enum: [admin, operator, viewer]
          example: admin
          description: 角色
        status:
          type: string
          enum: [active, inactive, locked]
          example: active
          description: 狀態
        last_login_at:
          type: string
          format: date-time
          example: "2025-10-09T10:30:00Z"
          description: 最後登入時間
        created_at:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
          description: 建立時間
        
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
          description: 操作是否成功
        message:
          type: string
          example: 操作失敗
          description: 錯誤訊息
        errors:
          type: array
          items:
            type: string
          description: 詳細錯誤列表
          example:
            - 帳號或密碼錯誤

  responses:
    Unauthorized:
      description: 未授權 - Token 無效或已過期
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: 未授權，請重新登入
            errors:
              - JWT Token 無效或已過期

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        使用 JWT Bearer Token 進行身份驗證
        
        **使用方式**:
        ```
        Authorization: Bearer {token}
        ```
        
        **Token 有效期**: 60 分鐘
        **Refresh Token 有效期**: 7 天

tags:
  - name: 身份驗證
    description: 使用者登入、登出和權限管理相關 API

