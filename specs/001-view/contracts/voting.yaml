openapi: 3.0.3
info:
  title: 都更計票系統 - 投票 API
  description: |
    投票相關 API，包含投票議題管理、投票表決、投票結果統計等功能。

    **主要功能**：
    - 投票議題的 CRUD 操作
    - 投票議題狀態管理（草稿、投票中、已關閉）
    - 投票表決（單筆、批次）
    - 投票結果統計（按人數、土地面積、建物面積）
    - 投票結果匯出
  version: 1.0.0

servers:
  - url: http://localhost:4002/api
    description: 開發環境

tags:
  - name: Voting Topics
    description: 投票議題管理
  - name: Voting
    description: 投票表決與統計

paths:
  # ============ 投票議題 API ============
  /voting-topics:
    get:
      tags:
        - Voting Topics
      summary: 取得投票議題列表
      description: |
        取得投票議題的分頁列表，支援多種篩選條件。

        **篩選條件**：
        - meeting_id: 依會議篩選
        - status: 依投票狀態篩選
        - search: 關鍵字搜尋議題標題
      operationId: getVotingTopics
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/PageParam'
        - $ref: './common.yaml#/components/parameters/PerPageParam'
        - name: meeting_id
          in: query
          description: 會議 ID
          required: false
          schema:
            type: integer
            example: 1
        - name: status
          in: query
          description: 投票狀態
          required: false
          schema:
            $ref: './common.yaml#/components/schemas/VotingStatus'
        - $ref: './common.yaml#/components/parameters/SearchParam'
      responses:
        '200':
          description: 查詢成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/VotingTopic'
                      pager:
                        type: object
                        description: 分頁資訊
                  message:
                    type: string
                    example: "投票議題列表"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

    post:
      tags:
        - Voting Topics
      summary: 建立投票議題
      description: |
        建立新的投票議題。

        **必填欄位**：
        - meeting_id: 會議 ID
        - topic_number: 議題編號
        - topic_title: 議題標題
        - voting_method: 投票方式

        **投票方式說明**：
        - 簡單多數：同意票數多於不同意票數
        - 絕對多數：同意票數超過應出席人數的一半
        - 三分之二多數：同意票數達應出席人數的三分之二
        - 全體一致：所有人都同意
      operationId: createVotingTopic
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VotingTopicCreate'
            example:
              meeting_id: 1
              topic_number: "1"
              topic_title: "通過都市更新事業計畫"
              topic_description: "審議並表決通過都市更新事業計畫草案"
              voting_method: "絕對多數"
      responses:
        '201':
          description: 建立成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingTopic'
                  message:
                    type: string
                    example: "投票議題建立成功"
        '400':
          $ref: './common.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting-topics/{id}:
    get:
      tags:
        - Voting Topics
      summary: 取得投票議題詳情
      description: |
        取得指定投票議題的詳細資料，包含關聯的會議和都市更新會資訊。
      operationId: getVotingTopic
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/IDPathParam'
      responses:
        '200':
          description: 查詢成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingTopicDetail'
                  message:
                    type: string
                    example: "投票議題詳情"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './common.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

    put:
      tags:
        - Voting Topics
      summary: 更新投票議題
      description: |
        更新指定投票議題的資料。

        **注意事項**：
        - 投票進行中或已關閉的議題，某些欄位可能無法修改
      operationId: updateVotingTopic
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/IDPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VotingTopicUpdate'
            example:
              topic_title: "通過都市更新事業計畫（修訂版）"
              topic_description: "審議並表決通過都市更新事業計畫草案（第二次修訂）"
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingTopic'
                  message:
                    type: string
                    example: "投票議題更新成功"
        '400':
          $ref: './common.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

    delete:
      tags:
        - Voting Topics
      summary: 刪除投票議題
      description: |
        刪除指定的投票議題（軟刪除）。

        **限制條件**：
        - 已有投票記錄的議題可能無法刪除
        - 投票進行中的議題無法刪除
      operationId: deleteVotingTopic
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/IDPathParam'
      responses:
        '200':
          description: 刪除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "投票議題刪除成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '422':
          description: 無法刪除（業務邏輯限制）
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ErrorResponse'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting-topics/{id}/start-voting:
    patch:
      tags:
        - Voting Topics
      summary: 開始投票
      description: |
        將投票議題狀態從草稿變更為投票中，開放會員投票。

        **前置條件**：
        - 議題狀態必須為 draft
        - 會議狀態必須為進行中
      operationId: startVoting
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/IDPathParam'
      responses:
        '200':
          description: 開始投票成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingTopic'
                  message:
                    type: string
                    example: "投票已開始"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '422':
          description: 無法開始投票（狀態或條件不符）
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ErrorResponse'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting-topics/{id}/close-voting:
    patch:
      tags:
        - Voting Topics
      summary: 關閉投票
      description: |
        將投票議題狀態變更為已關閉，結束投票並計算結果。

        **前置條件**：
        - 議題狀態必須為 open（投票中）

        **功能說明**：
        - 關閉後會員無法再投票或修改投票
        - 系統會自動計算投票結果
        - 根據投票方式判斷議題是否通過
      operationId: closeVoting
      security:
        - BearerAuth: []
      parameters:
        - $ref: './common.yaml#/components/parameters/IDPathParam'
      responses:
        '200':
          description: 關閉投票成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingTopic'
                  message:
                    type: string
                    example: "投票已關閉"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '422':
          description: 無法關閉投票（狀態不符）
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ErrorResponse'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  # ============ 投票表決 API ============
  /voting/vote:
    post:
      tags:
        - Voting
      summary: 投票（單筆）
      description: |
        對指定議題進行投票。

        **前置條件**：
        - 議題狀態必須為 open（投票中）
        - 會員必須已報到
        - 會員尚未對該議題投票（或允許修改投票）

        **投票選擇**：
        - 同意：贊成該議題
        - 不同意：反對該議題
        - 棄權：不表態
      operationId: vote
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteRequest'
            example:
              voting_topic_id: 1
              property_owner_id: 10
              vote_choice: "同意"
      responses:
        '201':
          description: 投票成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingRecord'
                  message:
                    type: string
                    example: "投票成功"
        '400':
          $ref: './common.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '422':
          description: 無法投票（條件不符）
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "BUSINESS_LOGIC_ERROR"
                      message:
                        type: string
                        example: "投票已關閉或會員未報到"
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/batch-vote:
    post:
      tags:
        - Voting
      summary: 批次投票
      description: |
        對多個議題進行批次投票。

        **使用場景**：
        - 會員對會議中所有議題統一投票
        - 快速處理多個議題的投票作業

        **注意事項**：
        - 每個議題的投票條件會分別檢查
        - 部分失敗不影響其他議題的投票
      operationId: batchVote
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - property_owner_id
                - votes
              properties:
                property_owner_id:
                  type: integer
                  example: 10
                  description: 所有權人 ID
                votes:
                  type: array
                  items:
                    type: object
                    required:
                      - voting_topic_id
                      - vote_choice
                    properties:
                      voting_topic_id:
                        type: integer
                        description: 投票議題 ID
                      vote_choice:
                        $ref: './common.yaml#/components/schemas/VoteChoice'
            example:
              property_owner_id: 10
              votes:
                - voting_topic_id: 1
                  vote_choice: "同意"
                - voting_topic_id: 2
                  vote_choice: "同意"
                - voting_topic_id: 3
                  vote_choice: "不同意"
      responses:
        '201':
          description: 批次投票完成
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 3
                        description: 總筆數
                      success:
                        type: integer
                        example: 3
                        description: 成功筆數
                      failed:
                        type: integer
                        example: 0
                        description: 失敗筆數
                      errors:
                        type: array
                        description: 失敗明細
                        items:
                          type: object
                          properties:
                            voting_topic_id:
                              type: integer
                            message:
                              type: string
                  message:
                    type: string
                    example: "批次投票完成"
        '400':
          $ref: './common.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/my-vote/{topicId}:
    get:
      tags:
        - Voting
      summary: 取得我的投票
      description: |
        取得當前使用者（或指定所有權人）對特定議題的投票記錄。

        **功能說明**：
        - 查詢會員是否已投票
        - 查看投票選擇和時間
      operationId: getMyVote
      security:
        - BearerAuth: []
      parameters:
        - name: topicId
          in: path
          description: 投票議題 ID
          required: true
          schema:
            type: integer
        - name: property_owner_id
          in: query
          description: 所有權人 ID（選填，管理員可查詢其他人的投票）
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 查詢成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingRecord'
                  message:
                    type: string
                    example: "取得投票記錄成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          description: 尚未投票
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ErrorResponse'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/remove-vote:
    delete:
      tags:
        - Voting
      summary: 移除投票
      description: |
        移除投票記錄，允許重新投票。

        **前置條件**：
        - 議題狀態必須為 open（投票中）
        - 必須已有投票記錄

        **注意事項**：
        - 投票關閉後無法移除投票
      operationId: removeVote
      security:
        - BearerAuth: []
      parameters:
        - name: voting_topic_id
          in: query
          description: 投票議題 ID
          required: true
          schema:
            type: integer
        - name: property_owner_id
          in: query
          description: 所有權人 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 移除投票成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "投票已移除"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '422':
          description: 無法移除投票（條件不符）
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ErrorResponse'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/statistics/{topicId}:
    get:
      tags:
        - Voting
      summary: 取得投票統計
      description: |
        取得指定議題的投票統計資料。

        **統計項目**：
        - 按人數統計（同意/不同意/棄權票數）
        - 按土地面積統計（同意/不同意/棄權面積）
        - 按建物面積統計（同意/不同意/棄權面積）
        - 投票率
        - 是否通過

        **通過判斷依據**：
        - 簡單多數：同意票數 > 不同意票數
        - 絕對多數：同意票數 > 應出席人數 / 2
        - 三分之二多數：同意票數 >= 應出席人數 * 2/3
        - 全體一致：同意票數 = 應出席人數
      operationId: getVotingStatistics
      security:
        - BearerAuth: []
      parameters:
        - name: topicId
          in: path
          description: 投票議題 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 查詢成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/VotingStatistics'
                  message:
                    type: string
                    example: "取得投票統計成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/detailed/{topicId}:
    get:
      tags:
        - Voting
      summary: 取得詳細投票記錄
      description: |
        取得指定議題的詳細投票記錄清單，包含每位投票者的選擇和時間。

        **權限要求**：
        - 管理員可查看所有投票記錄
        - 一般使用者只能查看統計資料

        **用途**：
        - 會議紀錄
        - 投票結果驗證
        - 爭議處理
      operationId: getDetailedVotingRecords
      security:
        - BearerAuth: []
      parameters:
        - name: topicId
          in: path
          description: 投票議題 ID
          required: true
          schema:
            type: integer
        - $ref: './common.yaml#/components/parameters/PageParam'
        - $ref: './common.yaml#/components/parameters/PerPageParam'
      responses:
        '200':
          description: 查詢成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VotingRecordDetail'
                  pagination:
                    $ref: './common.yaml#/components/schemas/Pagination'
                  message:
                    type: string
                    example: "取得詳細投票記錄成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './common.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /voting/export/{topicId}:
    get:
      tags:
        - Voting
      summary: 匯出投票結果
      description: |
        匯出指定議題的投票結果為 Excel 檔案。

        **匯出內容**：
        - 議題基本資訊
        - 投票統計摘要
        - 詳細投票記錄
        - 所有權人資訊

        **檔案格式**：
        - Excel (.xlsx)
        - 包含多個工作表（摘要、詳細記錄）
      operationId: exportVotingResults
      security:
        - BearerAuth: []
      parameters:
        - name: topicId
          in: path
          description: 投票議題 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 匯出成功
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './common.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    VotingTopic:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        meeting_id:
          type: integer
          example: 1
          description: 會議 ID
        topic_number:
          type: string
          example: "1"
          description: 議題編號
        topic_title:
          type: string
          example: "通過都市更新事業計畫"
          description: 議題標題
        topic_description:
          type: string
          nullable: true
          example: "審議並表決通過都市更新事業計畫草案"
          description: 議題說明
        voting_method:
          $ref: './common.yaml#/components/schemas/VotingMethod'
        voting_status:
          $ref: './common.yaml#/components/schemas/VotingStatus'
        agree_count:
          type: integer
          example: 60
          description: 同意票數（人數）
        disagree_count:
          type: integer
          example: 10
          description: 不同意票數（人數）
        abstain_count:
          type: integer
          example: 5
          description: 棄權票數（人數）
        agree_land_area:
          type: number
          format: float
          example: 3500.50
          description: 同意票數（土地面積）
        disagree_land_area:
          type: number
          format: float
          example: 500.30
          description: 不同意票數（土地面積）
        abstain_land_area:
          type: number
          format: float
          example: 300.20
          description: 棄權票數（土地面積）
        agree_building_area:
          type: number
          format: float
          example: 4000.00
          description: 同意票數（建物面積）
        disagree_building_area:
          type: number
          format: float
          example: 600.00
          description: 不同意票數（建物面積）
        abstain_building_area:
          type: number
          format: float
          example: 400.00
          description: 棄權票數（建物面積）
        is_passed:
          type: boolean
          nullable: true
          example: true
          description: 是否通過（關閉後計算）
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true

    VotingTopicDetail:
      allOf:
        - $ref: '#/components/schemas/VotingTopic'
        - type: object
          properties:
            meeting:
              type: object
              description: 關聯的會議資訊
              properties:
                id:
                  type: integer
                meeting_name:
                  type: string
                meeting_date:
                  type: string
                  format: date
                meeting_status:
                  $ref: './common.yaml#/components/schemas/MeetingStatus'
            urban_renewal:
              type: object
              description: 關聯的都市更新會資訊
              properties:
                id:
                  type: integer
                name:
                  type: string

    VotingTopicCreate:
      type: object
      required:
        - meeting_id
        - topic_number
        - topic_title
        - voting_method
      properties:
        meeting_id:
          type: integer
          example: 1
        topic_number:
          type: string
          maxLength: 50
          example: "1"
        topic_title:
          type: string
          maxLength: 500
          example: "通過都市更新事業計畫"
        topic_description:
          type: string
          example: "審議並表決通過都市更新事業計畫草案"
        voting_method:
          $ref: './common.yaml#/components/schemas/VotingMethod'

    VotingTopicUpdate:
      type: object
      properties:
        topic_number:
          type: string
          maxLength: 50
        topic_title:
          type: string
          maxLength: 500
        topic_description:
          type: string
        voting_method:
          $ref: './common.yaml#/components/schemas/VotingMethod'

    VotingRecord:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        voting_topic_id:
          type: integer
          example: 1
        property_owner_id:
          type: integer
          example: 10
        vote_choice:
          $ref: './common.yaml#/components/schemas/VoteChoice'
        land_area_weight:
          type: number
          format: float
          example: 100.50
          description: 土地面積權重
        building_area_weight:
          type: number
          format: float
          example: 150.75
          description: 建物面積權重
        voted_at:
          type: string
          format: date-time
          example: "2025-11-15T14:30:00Z"
          description: 投票時間
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    VotingRecordDetail:
      allOf:
        - $ref: '#/components/schemas/VotingRecord'
        - type: object
          properties:
            property_owner:
              type: object
              description: 所有權人資訊
              properties:
                id:
                  type: integer
                full_name:
                  type: string
                  example: "王大明"
                owner_number:
                  type: string
                  example: "OWN-001"

    VoteRequest:
      type: object
      required:
        - voting_topic_id
        - property_owner_id
        - vote_choice
      properties:
        voting_topic_id:
          type: integer
          example: 1
        property_owner_id:
          type: integer
          example: 10
        vote_choice:
          $ref: './common.yaml#/components/schemas/VoteChoice'

    VotingStatistics:
      type: object
      properties:
        voting_topic_id:
          type: integer
          example: 1
        topic_title:
          type: string
          example: "通過都市更新事業計畫"
        voting_method:
          $ref: './common.yaml#/components/schemas/VotingMethod'
        voting_status:
          $ref: './common.yaml#/components/schemas/VotingStatus'
        by_count:
          type: object
          description: 按人數統計
          properties:
            agree:
              type: integer
              example: 60
              description: 同意票數
            disagree:
              type: integer
              example: 10
              description: 不同意票數
            abstain:
              type: integer
              example: 5
              description: 棄權票數
            total:
              type: integer
              example: 75
              description: 總投票人數
            eligible:
              type: integer
              example: 80
              description: 有投票權人數
            rate:
              type: number
              format: float
              example: 0.9375
              description: 投票率（總投票人數 / 有投票權人數）
        by_land_area:
          type: object
          description: 按土地面積統計
          properties:
            agree:
              type: number
              format: float
              example: 3500.50
            disagree:
              type: number
              format: float
              example: 500.30
            abstain:
              type: number
              format: float
              example: 300.20
            total:
              type: number
              format: float
              example: 4301.00
            eligible:
              type: number
              format: float
              example: 5000.00
            rate:
              type: number
              format: float
              example: 0.8602
        by_building_area:
          type: object
          description: 按建物面積統計
          properties:
            agree:
              type: number
              format: float
              example: 4000.00
            disagree:
              type: number
              format: float
              example: 600.00
            abstain:
              type: number
              format: float
              example: 400.00
            total:
              type: number
              format: float
              example: 5000.00
            eligible:
              type: number
              format: float
              example: 6000.00
            rate:
              type: number
              format: float
              example: 0.8333
        result:
          type: object
          description: 投票結果
          properties:
            is_passed:
              type: boolean
              example: true
              description: 是否通過
            pass_reason:
              type: string
              example: "同意票數達到絕對多數（超過應出席人數的一半）"
              description: 通過原因說明
            count_pass:
              type: boolean
              example: true
              description: 按人數是否通過
            land_area_pass:
              type: boolean
              example: true
              description: 按土地面積是否通過
            building_area_pass:
              type: boolean
              example: true
              description: 按建物面積是否通過
