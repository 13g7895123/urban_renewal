openapi: 3.0.3
info:
  title: 都更計票系統 - 身份驗證 API
  description: |
    身份驗證相關 API，包含登入、登出、Token 刷新、密碼管理等功能。

    所有需要身份驗證的 API 都需要在 HTTP Header 中加入 Bearer Token：
    ```
    Authorization: Bearer <JWT_TOKEN>
    ```
  version: 1.0.0
  contact:
    name: 都更計票系統開發團隊

servers:
  - url: http://localhost:4002/api
    description: 開發環境
  - url: https://api.urban-renewal.example.com/api
    description: 正式環境

tags:
  - name: Authentication
    description: 身份驗證相關操作

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: 使用者登入
      description: |
        使用帳號和密碼進行身份驗證。

        **功能說明**：
        - 驗證帳號密碼
        - 產生 JWT Token 和 Refresh Token
        - 記錄登入時間和 IP
        - 登入失敗 5 次將鎖定帳號 30 分鐘

        **Token 有效期**：
        - Access Token: 24 小時
        - Refresh Token: 7 天
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  maxLength: 100
                  description: 使用者帳號
                  example: "admin"
                password:
                  type: string
                  minLength: 6
                  description: 使用者密碼
                  example: "password123"
            examples:
              admin:
                summary: 管理員登入
                value:
                  username: "admin"
                  password: "admin123456"
              user:
                summary: 一般使用者登入
                value:
                  username: "user001"
                  password: "user123456"
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        description: JWT Access Token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refresh_token:
                        type: string
                        description: Refresh Token
                        example: "a1b2c3d4e5f6..."
                      expires_in:
                        type: integer
                        description: Token 有效期（秒）
                        example: 86400
                  message:
                    type: string
                    example: "登入成功"
        '401':
          description: 帳號或密碼錯誤，或帳號已被鎖定
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "UNAUTHORIZED"
                      message:
                        type: string
                        example: "帳號或密碼錯誤"
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: 使用者登出
      description: |
        登出當前使用者，使 Token 失效。

        **功能說明**：
        - 將當前 Session 標記為失效
        - 清除伺服器端的登入狀態
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "登出成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: 刷新 Token
      description: |
        使用 Refresh Token 更新 Access Token，延長登入狀態。

        **功能說明**：
        - 驗證 Refresh Token 有效性
        - 產生新的 Access Token 和 Refresh Token
        - 更新 Session 記錄

        **注意事項**：
        - Refresh Token 過期後需要重新登入
        - 每次刷新會產生新的 Refresh Token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: Refresh Token
                  example: "a1b2c3d4e5f6..."
      responses:
        '200':
          description: Token 刷新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: 新的 JWT Access Token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refresh_token:
                        type: string
                        description: 新的 Refresh Token
                        example: "b2c3d4e5f6g7..."
                      expires_in:
                        type: integer
                        description: Token 有效期（秒）
                        example: 86400
                  message:
                    type: string
                    example: "Token 刷新成功"
        '401':
          description: Refresh Token 無效或已過期
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "UNAUTHORIZED"
                      message:
                        type: string
                        example: "Refresh token 無效或已過期"
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: 取得當前使用者資訊
      description: |
        取得當前登入使用者的詳細資訊。

        **功能說明**：
        - 驗證 JWT Token
        - 回傳使用者基本資料
        - 不包含敏感資訊（密碼等）
      operationId: getCurrentUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 取得使用者資訊成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "取得使用者資訊成功"
        '401':
          $ref: './common.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: 忘記密碼
      description: |
        請求重設密碼連結。

        **功能說明**：
        - 驗證 Email 是否存在
        - 產生密碼重設 Token（有效期 1 小時）
        - 發送重設密碼郵件（未實作）

        **注意事項**：
        - 為安全考量，無論 Email 是否存在都回傳成功訊息
        - 郵件發送功能待實作
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: 使用者註冊的 Email
                  example: "user@example.com"
      responses:
        '200':
          description: 請求處理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "如果該信箱存在，我們已發送重設密碼連結"
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: 重設密碼
      description: |
        使用重設 Token 重設密碼。

        **功能說明**：
        - 驗證重設 Token 有效性
        - 更新密碼
        - 清除重設 Token
        - 重置登入嘗試次數

        **注意事項**：
        - Token 有效期為 1 小時
        - 密碼長度至少 6 個字元
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
                - password_confirm
              properties:
                token:
                  type: string
                  description: 密碼重設 Token
                  example: "a1b2c3d4e5f6g7h8..."
                password:
                  type: string
                  minLength: 6
                  description: 新密碼
                  example: "newPassword123"
                password_confirm:
                  type: string
                  description: 確認新密碼
                  example: "newPassword123"
      responses:
        '200':
          description: 密碼重設成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "密碼重設成功"
        '400':
          description: Token 無效或已過期
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "INVALID_TOKEN"
                      message:
                        type: string
                        example: "重設令牌無效或已過期"
        '422':
          $ref: './common.yaml#/components/responses/ValidationError'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Token 認證

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: 使用者 ID
        username:
          type: string
          example: "admin"
          description: 使用者帳號
        email:
          type: string
          format: email
          example: "admin@example.com"
          description: 使用者 Email
        full_name:
          type: string
          example: "系統管理員"
          description: 使用者姓名
        role:
          type: string
          enum:
            - admin
            - manager
            - user
            - viewer
          example: "admin"
          description: 使用者角色
        urban_renewal_id:
          type: integer
          format: int64
          nullable: true
          example: 1
          description: 所屬更新會 ID（管理員為 null）
        is_active:
          type: boolean
          example: true
          description: 帳號是否啟用
        last_login_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-10-08T10:30:00Z"
          description: 最後登入時間
        created_at:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
          description: 建立時間
        updated_at:
          type: string
          format: date-time
          example: "2025-10-08T10:30:00Z"
          description: 更新時間
      description: 使用者資訊（不包含敏感資料）
